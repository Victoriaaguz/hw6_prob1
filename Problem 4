/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> ans;
    void inorder(TreeNode* node) {
        if (node == NULL) return; //Return if Null.
        inorder(node->left); //Visit left sub-tree descendants first.
        ans.push_back(node->val); //Push-back to visit node.
        inorder(node->right); //Visit right sub_tree descendants third.
    }
    vector<int> inorderTraversal(TreeNode* root) {
        inorder(root); //Assemble inorder traversal.                     
        return ans; //Return Answer.
    }
};
