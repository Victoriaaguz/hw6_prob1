/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(!root) return 0; // no root returns 0
        int maxLeft = maxDepth(root->left); // counts the nodes on the left 
        int maxRight = maxDepth(root->right); // counts the nodes on the right
        return max(maxLeft, maxRight)+1; // takes the amount from left and right and adds them up plus the root giveing max height of the tree. returns the value. 
       }
    };
